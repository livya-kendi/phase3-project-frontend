{"ast":null,"code":"var _jsxFileName = \"/home/livya/phase3-project/struggle-and-succeed-frontend/struggle-and-succeed/src/components/All.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction All() {\n  _s();\n\n  const [advice, setAdvice] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:9292/words\").then(resp => resp.json()).then(data => setAdvice(data));\n  }, []);\n  const adviceToDisplay = advice.map(advice => {\n    const {\n      user,\n      word,\n      comments\n    } = advice;\n    const commentSection = comments.map(comment => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\\"\", comment.comment, \"\\\" -\", /*#__PURE__*/_jsxDEV(\"em\", {\n            children: comment.user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this)\n      }, comment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"\\\"\", word, \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"- \", user]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), comments.length ? commentSection : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"None\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 53\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: adviceToDisplay\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(All, \"IOky9C7BgeN9EBx7nJNtrmNFmvs=\");\n\n_c = All;\nexport default All;\n\nvar _c;\n\n$RefreshReg$(_c, \"All\");","map":{"version":3,"sources":["/home/livya/phase3-project/struggle-and-succeed-frontend/struggle-and-succeed/src/components/All.js"],"names":["React","useState","useEffect","All","advice","setAdvice","fetch","then","resp","json","data","adviceToDisplay","map","user","word","comments","commentSection","comment","id","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,KAAK,CAAC,6BAAD,CAAL,CACCC,IADD,CACMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADd,EAECF,IAFD,CAEMG,IAAI,IAAIL,SAAS,CAACK,IAAD,CAFvB;AAGH,GAJQ,EAIN,EAJM,CAAT;AAMA,QAAMC,eAAe,GAAGP,MAAM,CAACQ,GAAP,CAAWR,MAAM,IAAI;AACzC,UAAM;AAAES,MAAAA,IAAF;AAAQC,MAAAA,IAAR;AAAcC,MAAAA;AAAd,QAA2BX,MAAjC;AAEA,UAAMY,cAAc,GAAGD,QAAQ,CAACH,GAAT,CAAaK,OAAO,IAAI;AAC3C,0BACI;AAAA,+BACI;AAAA,2BAAKA,OAAO,CAACA,OAAb,uBAAwB;AAAA,sBAAKA,OAAO,CAACJ;AAAb;AAAA;AAAA;AAAA;AAAA,kBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,SAAUI,OAAO,CAACC,EAAlB;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH,KANsB,CAAvB;AAQA,wBACI;AAAA,8BACI;AAAA,yBAAMJ,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,yBAAOD,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,EAIKE,QAAQ,CAACI,MAAT,GAAkBH,cAAlB,gBAAmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJxC,eAKI;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AASH,GApBuB,CAAxB;AAsBA,sBACI;AAAA,cACKL;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GApCQR,G;;KAAAA,G;AAsCT,eAAeA,GAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\n\nfunction All() {\n    const [advice, setAdvice] = useState([])\n\n    useEffect(() => {\n        fetch(\"http://localhost:9292/words\")\n        .then(resp => resp.json())\n        .then(data => setAdvice(data))\n    }, [])\n\n    const adviceToDisplay = advice.map(advice => {\n        const { user, word, comments } = advice\n\n        const commentSection = comments.map(comment => {\n            return (\n                <div key={comment.id}>\n                    <p>\"{comment.comment}\" -<em>{comment.user}</em></p>\n                </div>\n            )\n        })\n\n        return (\n            <div>\n                <h1>\"{word}\"</h1>\n                <h2>- {user}</h2>\n                <h3>Comments</h3>\n                {comments.length ? commentSection : <p>None</p>}\n                <hr />\n            </div>\n        )\n    })\n\n    return (\n        <div>\n            {adviceToDisplay}\n        </div>\n    )\n}\n\nexport default All"]},"metadata":{},"sourceType":"module"}